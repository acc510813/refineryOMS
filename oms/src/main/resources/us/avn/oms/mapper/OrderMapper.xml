<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="us.avn.oms.mapper.OrderMapper">

  <!-- cache / -->
    
  <resultMap id="ordmap" type="Order">
    <result property="shipmentId"     column="shipment_id" />
    <result property="customerId"     column="customer_id" />
    <result property="customer"       column="customer" />
    <result property="carrierId"      column="carrier_id" />
    <result property="carrier"        column="carrier" />
    <result property="purchase"       column="purchase" />
    <result property="expDate"        column="exp_date" />
    <result property="actDate"        column="act_date" />
    <result property="expVolume"      column="exp_volume" />
    <result property="actVolume"      column="act_volume" />
  </resultMap>
  
  <resultMap id="itemMap" type="Item">
    <result property="shipmentId"     column="shipment_id"/>
    <result property="itemNo"         column="item_no" />
    <result property="newItem"        column="new_item" />
    <result property="active"         column="active" />
    <result property="contentCd"      column="content_cd" />
    <result property="expVolumeMin"   column="exp_volume_min" />
    <result property="expVolumeMax"   column="exp_volume_max" />
    <result property="actVolume"      column="act_volume" />
  </resultMap>

  <select id="getOrder" resultMap="ordmap">
    select s.shipment_id, s.customer_id, c.name customer, s.carrier_id, t.name carrier
         , s.purchase, s.exp_date, s.act_date, ovv.exp_volume, ovv.act_volume
      from shipment s join customer c on s.customer_id = c.id
      join tag t on s.carrier_id = t.id
      join order_volume_vw ovv on s.shipment_id = ovv.shipment_id 
     where s.shipment_id = #{param1}
     order by s.exp_date desc
  </select>
  
  <select id="getOrderItems" resultMap="itemMap">
    select s.shipment_id, i.item_no, coalesce(i.content_cd,'') content_cd
         , coalesce(i.content_cd,'N') new_item, i.active
         , coalesce(i.exp_volume_min,0) min_vol, coalesce(i.exp_volume_max,100000) max_vol
         , coalesce(i.act_volume,0) act_vol
      from shipment s join shipment_item i on s.shipment_id=i.shipment_id
     where s.shipment_id = #{param1}
    union 
    select s.shipment_id, h.hold_no, '' content_cd, 'Y', null,
         , 0 min_vol, coalesce(h.volume*h.no_duplicates,100000) max_vol
         , 0 act_vol
      from shipment s 
     right outer join hold h on s.carrier_id=h.carrier_id
     where s.shipment_id= #{param1}
       and h.hold_no not in (select item_no from shipment_item where shipment_id=s.shipment_id)
     order by item_no
  </select>
  
  <select id="getActiveOrders" resultMap="ordmap">
    select distinct s.shipment_id, s.customer_id, c.name customer, s.carrier_id
    	 , t.name carrier, s.purchase, s.exp_date, s.act_date, ovv.exp_volume
    	 , ovv.act_volume
      from shipment s join customer c on s.customer_id = c.id
      join tag t on s.carrier_id = t.id
      join order_volume_vw ovv on s.shipment_id = ovv.shipment_id 
      join active_order_vw aov on s.shipment_id = aov.shipment_id
     where aov.sc != 0
     order by s.exp_date desc
  </select>

  <select id="getPendingOrders" resultMap="ordmap">
    select s.shipment_id, s.customer_id, c.name customer, s.carrier_id, t.name carrier
         , s.purchase, s.exp_date, s.act_date, ovv.exp_volume, ovv.act_volume
      from shipment s join customer c on s.customer_id = c.id
      join tag t on s.carrier_id = t.id
      join order_volume_vw ovv on s.shipment_id = ovv.shipment_id 
      join pending_order_vw pov on s.shipment_id = pov.shipment_id
     where pov.sc != 0
     order by s.exp_date desc
  </select>
  
  <select id="getPendingOrderItems" resultMap="itemMap">
    select shipment_id, item_no, active, coalesce(content_cd,'') content_cd
         , coalesce(content_cd,'N') new_item
         , exp_volume_min, exp_volume_max, coalesce(act_volume,0) act_volume
      from shipment_item 
     where active = 'P'
       and shipment_id = #{parm1}
  </select>

  <select id="getOrdersByType" resultMap="ordmap">
    select s.shipment_id, s.customer_id, c.name customer, s.carrier_id, t.name carrier
         , s.purchase, s.exp_date, s.act_date, ovv.exp_volume, ovv.act_volume
      from shipment s join customer c on s.customer_id = c.id
      join tag t on s.carrier_id = t.id
      join order_volume_vw ovv on s.shipment_id = ovv.shipment_id 
     where s.purchase = #{param1}
       and s.exp_date > current_date()-interval 3 month
     order by s.exp_date desc
  </select>

  <select id="getLastWeeksOrders" resultMap="ordmap">
    select s.shipment_id, s.customer_id, c.name customer, s.carrier_id, t.name carrier
         , s.purchase, s.exp_date, s.act_date, ovv.exp_volume, ovv.act_volume
      from shipment s join customer c on s.customer_id = c.id
      join tag t on s.carrier_id = t.id
      join order_volume_vw ovv on s.shipment_id = ovv.shipment_id
     where s.exp_date > current_date()-interval 1 week 
     order by s.exp_date desc
  </select>
  
  <select id="getLastMonthsOrders" resultMap="ordmap">
    select s.shipment_id, s.customer_id, c.name customer, s.carrier_id, t.name carrier
         , s.purchase, s.exp_date, s.act_date, ovv.exp_volume, ovv.act_volume
      from shipment s join customer c on s.customer_id = c.id
      join tag t on s.carrier_id = t.id
      join order_volume_vw ovv on s.shipment_id = ovv.shipment_id
     where s.exp_date > current_date()-interval 1 month 
     order by s.exp_date desc
  </select>
    
  <update id="updateOrder" parameterType="Order">
    update shipment
       set customer_id = #{customerId}
         , carrier_id = #{carrierId}
         , purchase = #{purchase}
         , exp_date = #{expDate}
         , act_date = #{actDate}
     where shipment_id = #{shipmentId}
  </update>
  
  <update id="updateItem" parameterType="Item">
    update shipment_item
       set active = #{active}
         , content_cd = #{contentCd}
         , exp_volume_min = #{expVolumeMin}
         , exp_volume_max = #{expVolumeMax}
         , act_volume = #{actVolume}
     where shipment_id = #{shipmentId}
       and item_no = #{itemNo}
  </update>
  
  <insert id="insertOrder" parameterType="Order">
    insert shipment
          ( customer_id,   carrier_id,   purchase,    exp_date,   act_date )
    values( #{customerId}, #{carrierId}, #{purchase}, #{expDate}, #{actDate} )
    <selectKey keyProperty="shipmentId" resultType="long" order="AFTER">
      SELECT LAST_INSERT_ID();
    </selectKey>
  </insert>
  
  <insert id="insertItem" parameterType="Item">
    insert shipment_item
          ( shipment_id,   item_no,   active,    content_cd,   exp_volume_min,  exp_volume_max,  act_volume )
    values( #{shipmentId}, #{itemNo}, #{active}, #{contentCd}, #{expVolumeMin}, #{expVolumeMax}, #{actVolume} )
    on duplicate key update
            active = #{active}
          , content_cd = #{contentCd}
          , exp_volume_min = #{expVolumeMin}
          , exp_volume_max = #{expVolumeMax}
          , act_volume = #{actVolume}
  </insert>
  
</mapper>
