<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="us.avn.oms.mapper.TransferMapper">

  <!-- cache / -->
<!-- 
	Collection<Transfer> getAllTransfers( );
	
	Transfer getTransfer( Long id );
	
	Transfer getTemplate( String nm );
	
	Collection<Transfer> getEndingTransfers( );
	
	Collection<Transfer> getStartingTransfers( );

	Collection<IdName> getTransferTypes();
		
	void completeTransfer( Long id );

	void startTransfer( Long id );

	void updateTransfer( Transfer t );
	
	Integer insertTransfer( Transfer t );
-->  

  <resultMap id="transferResultMap" type="Transfer">
    <result property="id"              column="id"/>
    <result property="tagId"           column="tag_id"/>
    <result property="name"            column="name"/>
    <result property="contentsCode"    column="contents_code"/>
    <result property="statusId"        column="status_id"/>
    <result property="status"          column="status" />
    <result property="transferTypeId"  column="transfer_type_id"/>
    <result property="transferType"    column="transfer_type" />
    <result property="sourceId"        column="source_id"/>
    <result property="source"          column="source" />
    <result property="destinationId"   column="destination_id"/>
    <result property="destination"     column="destination"/>
    <result property="crontabId"       column="crontab_id" />
    <result property="expStartTime"    column="exp_start_time"/>
    <result property="expEndTime"      column="exp_end_time"/>
    <result property="expVolume"       column="exp_volume"/>
    <result property="actStartTime"    column="act_start_time"/>
    <result property="actEndTime"      column="act_end_time"/>
    <result property="actVolume"       column="act_volume"/>
    <result property="delta"           column="delta"/>
    <result property="startDiff"       column="start_diff" />
    <result property="endDiff"         column="end_diff" />
    <result property="newStartTime"    column="new_start_time" />
    <result property="newEndTime"      column="new_end_time" />
  </resultMap>
  
  <resultMap id="idNameResultMap" type="IdName">
    <result property="id"          column="id" />
    <result property="name"        column="name" />
  </resultMap>

  <select id="getAllTransfers" resultMap="transferResultMap">
    select x.id, x.tag_id, x.name, tx.misc contents_code
         , x.status_id, tsv.name status
         , x.transfer_type_id, ttv.name transfer_type
         , x.source_id, ts.name source
         , x.destination_id, td.name destination
         , x.exp_start_time, x.exp_end_time, x.exp_volume 
         , x.act_start_time, x.act_end_time, x.act_volume, x.delta 
      from transfer x join tag tx on x.tag_id=tx.id 
           join tag ts on x.source_id = ts.id
           join tag td on x.destination_id=td.id
           join transfer_status_vw tsv on x.status_id = tsv.value
           join transfer_type_vw ttv on x.transfer_type_id = ttv.value
     where ttv.code = #{param1}
       and (x.act_start_time is null 
           or x.act_start_time > date_sub(curdate(), interval 5 day))
     order by x.exp_start_time desc, x.name
  </select>

  <select id="getActiveTransfers" resultMap="transferResultMap">
    select x.id, x.tag_id, x.name, tx.misc contents_code
         , x.status_id, tsv.name status
         , x.transfer_type_id, ttv.name transfer_type
         , x.source_id, ts.name source
         , x.destination_id, td.name destination
         , x.exp_start_time, x.exp_end_time, x.exp_volume 
         , x.act_start_time, x.act_end_time, x.act_volume, x.delta
      from transfer x join tag tx on x.tag_id=tx.id 
           join tag ts on x.source_id = ts.id
           join tag td on x.destination_id=td.id
           join transfer_status_vw tsv on x.status_id = tsv.value
           join transfer_type_vw ttv on x.transfer_type_id = ttv.value
     where tsv.code = 'A'
     order by date_format(x.act_start_time,'%Y%M%D%H%i') asc, x.name
  </select>
  
  <select id="getLastTransfers" resultMap="transferResultMap">
    select x.id, x.tag_id, x.name, tx.misc contents_code
         , x.status_id, tsv.name status
         , x.transfer_type_id, ttv.name transfer_type
         , x.source_id, ts.name source
         , x.destination_id, td.name destination
         , x.exp_start_time, x.exp_end_time, x.exp_volume 
         , x.act_start_time, x.act_end_time, x.act_volume, x.delta
      from transfer x join tag tx on x.tag_id=tx.id 
           join tag ts on x.source_id = ts.id
           join tag td on x.destination_id=td.id
           join transfer_status_vw tsv on x.status_id = tsv.value
           join transfer_type_vw ttv on x.transfer_type_id = ttv.value
     where ttv.code = 'X'
       and date(act_end_time) > date(date_sub(current_date, interval #{param1} day))
     order by x.act_end_time desc
  </select>

  <select id="getScheduledTransfers" resultMap="transferResultMap">
    select x.id, x.tag_id, x.name, tx.misc contents_code
         , x.status_id, tsv.name status
         , x.transfer_type_id, ttv.name transfer_type
         , x.source_id, ts.name source
         , x.destination_id, td.name destination
         , x.exp_start_time, x.exp_end_time, x.exp_volume 
         , x.act_start_time, x.act_end_time, x.act_volume, x.delta
      from transfer x join tag tx on x.tag_id=tx.id 
           join tag ts on x.source_id = ts.id
           join tag td on x.destination_id=td.id
           join transfer_status_vw tsv on x.status_id = tsv.value
           join transfer_type_vw ttv on x.transfer_type_id = ttv.value
     where ttv.code = 'X'
       and tsv.code in ('S','P')
  </select>

  <select id="getTransfer" resultMap="transferResultMap">
    select x.id, x.tag_id, x.name, tx.misc contents_code
         , x.status_id, x.transfer_type_id
         , x.source_id, x.destination_id
         , x.exp_start_time, x.exp_end_time, x.exp_volume 
         , x.act_start_time, x.act_end_time, x.act_volume, x.delta 
      from transfer x join tag tx on x.tag_id=tx.id 
     where x.id = #{param1}
  </select>

  <select id="getTemplate" resultMap="transferResultMap">
    select x.id, x.tag_id, x.name, tx.misc contents_code
         , x.status_id, x.transfer_type_id
         , x.source_id, x.destination_id
         , x.exp_start_time, x.exp_end_time, x.exp_volume 
         , x.act_start_time, x.act_end_time, x.act_volume, x.delta 
      from transfer x join tag tx on x.tag_id=tx.id
           join transfer_type_vw ttv on x.transfer_type_id = ttv.value 
     where ttv.code = 'T'
      and x.name = #{param1}
  </select>

  <select id="getEndingTransfers" resultMap="transferResultMap">
    select x.id, x.tag_id, x.name, tx.misc contents_code
         , x.status_id, tsv.name status
         , x.transfer_type_id, ttv.name transfer_type
         , x.source_id, ts.name source
         , x.destination_id, td.name destination
         , x.exp_start_time, x.exp_end_time, x.exp_volume 
         , x.act_start_time, x.act_end_time, x.act_volume, x.delta
         , coalesce(UNIX_TIMESTAMP(exp_end_time) 
           - UNIX_TIMESTAMP(CURRENT_TIMESTAMP), 300) end_diff
      from transfer x join tag tx on x.tag_id = tx.id
           join tag ts on x.source_id=ts.id
           join tag td on x.destination_id=td.id
           join transfer_status_vw tsv on x.status_id = tsv.value
           join transfer_type_vw ttv on x.transfer_type_id = ttv.value
     where tsv.code = 'A'
       and ttv.code != 'T'
     order by 8, 2
  </select>

  <select id="getStartingTransfers" resultMap="transferResultMap">
    select x.id, x.tag_id, x.name, tx.misc contents_code
         , x.status_id, tsv.name status
         , x.transfer_type_id, ttv.name transfer_type
         , x.source_id, ts.name source
         , x.destination_id, td.name destination
         , x.exp_start_time, x.exp_end_time, x.exp_volume 
         , x.act_start_time, x.act_end_time, x.act_volume, x.delta 
         , coalesce(UNIX_TIMESTAMP(exp_start_time) 
           - UNIX_TIMESTAMP(CURRENT_TIMESTAMP), 300) start_diff
         , coalesce(UNIX_TIMESTAMP(exp_end_time) 
           - UNIX_TIMESTAMP(CURRENT_TIMESTAMP), 300) end_diff
      from transfer x join tag tx on x.tag_id=tx.id
           join tag ts on x.source_id = ts.id
           join tag td on x.destination_id=td.id
           join transfer_status_vw tsv on x.status_id = tsv.value
           join transfer_type_vw ttv on x.transfer_type_id = ttv.value
     where tsv.code in ('P','S')
       and ttv.code != 'T'
     order by 8, 2
  </select>

  <select id="getPendingTemplates" resultMap="transferResultMap">
    select x.id, x.tag_id, x.name, tx.misc contents_code
         , x.status_id, tsv.name status
         , x.transfer_type_id, ttv.name transfer_type
         , x.source_id, ts.name source
         , x.destination_id, td.name destination
         , x.crontab_id, x.exp_volume, x.delta 
      from transfer x join tag tx on x.tag_id=tx.id
           join tag ts on x.source_id = ts.id
           join tag td on x.destination_id=td.id
           join transfer_status_vw tsv on x.status_id = tsv.value
           join transfer_type_vw ttv on x.transfer_type_id = ttv.value
     where tsv.code not in ('C','I')
       and ttv.code = 'T'
       and coalesce(x.crontab_id,0) != 0
      order by 8, 2
  </select>

  <select id="getTransferTypes" resultMap="idNameResultMap">
    select tt.value id, tt.code name from transfer_type_vw tt order by 2
  </select>
  
  <select id="getTransferTypeId" resultType="Long">
    select tt.value from transfer_type_vw tt where tt.code = #{param1}
  </select>
  
  <select id="getTransferStatuses" resultMap="idNameResultMap">
    select ts.value id, ts.code name from transfer_status_vw ts
  </select>
  
  <select id="getTransferStatusId" resultType="Long">
    select ts.value from transfer_status_vw ts where ts.code = #{param1}
  </select>
  
  <update id="updateTransfer" parameterType="Transfer">
    update transfer
       set name = #{name}
         , status_id = #{statusId}
         , transfer_type_id = #{transferTypeId}
         , source_id = #{sourceId}
         , destination_id = #{destinationId}
         , exp_start_time = #{expStartTime}
         , exp_end_time = #{expEndTime}
         , exp_volume  = #{expVolume}
         , delta = #{delta}
         , act_start_time = #{actStartTime}
         , act_end_time = #{actEndTime}
         , act_volume = #{actVolume}
     where id = #{id}
  </update>
  
  <update id="completeTransfer" >
    update transfer
       set status_id = (select value from transfer_status_vw where code = 'C')
         , act_end_time = CURRENT_TIMESTAMP
     where id = #{param1}
  </update>
  
  <update id="startTransfer" >
    update transfer
       set status_id = (select value from transfer_status_vw where code = 'A')
         , act_start_time = CURRENT_TIMESTAMP
     where id = #{param1}
  </update>
  
  <insert id="insertTransfer" parameterType="Transfer" useGeneratedKeys="true"
          keyProperty="id" keyColumn="ID">
    insert transfer
          ( tag_id, name, status_id, transfer_type_id
          , source_id, destination_id, delta
          , exp_start_time, exp_end_time, exp_volume 
          , act_start_time, act_end_time, act_volume )
    values( #{tagId}, #{name}, #{statusId}, #{transferTypeId}
          , #{sourceId}, #{destinationId}, #{delta}
          , #{expStartTime}, #{expEndTime}, #{expVolume} 
          , #{actStartTime}, #{actEndTime}, #{actVolume} )
    <selectKey keyProperty="id" resultType="long" order="AFTER">
      SELECT LAST_INSERT_ID();
    </selectKey>
  </insert>
  
</mapper>
